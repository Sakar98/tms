// sass-lint:disable-all
@mixin font($size: false, $color: false, $weight: false, $lh: false, $style: false, $textDecoration: false) {
  @if $size { font-size: $size; }
  @if $color { color: $color; }
  @if $weight { font-weight: $weight; }
  @if $lh { line-height: $lh; }
  @if $style { font-style: $style; }
  @if $textDecoration { text-decoration: $textDecoration; }
}

// mixin to add ellipsis
@mixin  ellipsis ($maxWidth: false){
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;

  @if $maxWidth { max-width: $maxWidth; }
}

// Mixin for multiline ellipsis support on web
// this will provide support only for -webkit- browser for till date
@mixin  ellipsis-multi ($maxLine, $maxHeight: false){
  display: -webkit-box;
  -webkit-line-clamp: $maxLine;
  -webkit-box-orient: vertical;
  overflow: hidden; // fallback for non supported browsers
  white-space: normal;

  @if $maxHeight { // fallback for non supported browsers if required
    max-height: $maxHeight;
  }
}

// mixin for position
@mixin position($position, $top: false, $right: false, $bottom: false, $left: false, $zIndex: false) {
  position: $position;

  @if $top { top: $top; }
  @if $right { right: $right; }
  @if $bottom { bottom: $bottom; }
  @if $left { left: $left; }
  @if $zIndex { z-index: $zIndex; }
}

// mixin for width, height, max-width & max-height
@mixin  dimensions($width: false, $height: false, $minWidth: false, $minHeight: false, $maxWidth: false, $maxHeight: false) {
  @if $width { width: $width; }
  @if $height { height: $height; }
  @if $minWidth { min-width: $minWidth; }
  @if $minHeight { min-height: $minHeight; }
  @if $maxWidth { max-width: $maxWidth; }
  @if $maxHeight { max-height: $maxHeight; }
}

// mixin for display flex with all property
@mixin flex($display: false, $item: false, $content: false, $flexWrap: false, $flexDirection: false, $flex: false) {
  @if $display { display: $display; }
  @if $item { align-items: $item; }
  @if $content { justify-content: $content; }
  @if $flexWrap { flex-wrap: $flexWrap; }
  @if $flexDirection { flex-direction: $flexDirection; }
  @if $flex { flex: $flex; }
}

// mixin for display Grid with all property
@mixin grid($templateColumns: false, $gridGap: false, $content: center, $item: center) {
  display:grid;
  @if $templateColumns {  grid-template-columns: $templateColumns; }
  // grid-template-columns: repeat(auto-fit,minmax(60px,80px));
  @if $gridGap { grid-gap: $gridGap; }
  @if $content { justify-content: $content; }
  @if $item { align-items: $item; }
}

@mixin inline-grid($templateColumns: repeat(auto-fit,minmax(60px,80px)), $gridGap: 10px, $content: center, $item: center) {
  display:-ms-inline-grid;
  @if $templateColumns {  grid-template-columns: $templateColumns; }
  // grid-template-columns: repeat(auto-fit,minmax(60px,80px));
  @if $gridGap { grid-gap: $gridGap; }
  @if $content { justify-content: $content; }
  @if $item { align-items: $item; }
}

// mixin to create a link
@mixin link($size: false, $color: false, $weight: false, $decoration: false, $lh: false) {
  cursor: pointer;

  @if $size { font-size: $size; }
  @if $color { color: $color; }
  @if $weight { font-weight: $weight; }
  @if $decoration { text-decoration: $decoration; }
  @if $lh { line-height: $lh; }
}

// mixin for background properties
@mixin background($background: false, $repeat: false, $size: false, $position: false, $attachment: false) {
  @if $background { background-image: $background; }
  @if $repeat { background-repeat: $repeat; }
  @if $size { background-size: $size; }
  @if $position { background-position: $position; }
  @if $attachment { background-attachment: $attachment; }
}

//hack for firefox to support display flex properties
@mixin flex-support {
  min-height: 0;
}

//skeleton loading animation effect
@mixin loading-style {
  overflow: hidden;
  // Animation
  animation: wave 1s infinite ease-in-out;
  background: linear-gradient(to right, lighten($silver-line, 5%) 2%, $silver-line 18%, lighten($silver-line, 5%) 33%);
  background-size: 800px; // Animation Area
}

@keyframes wave {
  0% { background-position: -430px 0; }
  100% { background-position: 430px 0; }
}

//mixin for bullet circel
@mixin bullet-style($width, $height) {
  content: '';
  border-radius: 50%;
  width: $width;
  height: $height;
  background: $polo-grey;
}

// mixins to create radio button,
// only work where we will add active class on click
// not valid in case of input type radio button
// will require further update as per HTML structure
@mixin radio($width, $height) {
  width: $width;
  height: $height;
  border: 2px solid $polo-grey;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: 0.2s ease-in-out;

  &::before {
    content: '';
    width: 70%;
    height: 70%;
    border-radius: 50%;
    background: $theme-color;
    transform: scale(0);
    transition: 0.2s ease-in-out;
  }
}

@mixin radio-active {
  border-color: $theme-color;

  &::before {
    transform: scale(1);
  }
}
